---
title: "Modeling Fatigue and Injury Risk in Athletic Movements"
subtitle: "A Deep Learning Approach to Basketball Biomechanics"
author: "Geoffrey Hadfield"
date: "2025-03-24"
format: 
  html:
    toc: true
    toc-depth: 3
    code-fold: true
    highlight-style: github
---

# Project Overview

This research project explores the application of deep learning techniques to predict and prevent injuries in basketball players by analyzing biomechanical data and fatigue patterns. The work combines state-of-the-art LSTM architectures with comprehensive biomechanical datasets to create predictive models for athlete monitoring.

## Key Objectives

1. Develop predictive models for:
   - Exhaustion rate progression during basketball movements
   - Joint-specific injury risks based on biomechanical patterns
2. Create a real-time monitoring framework for practical implementation
3. Establish interpretable metrics for coaches and training staff

## Problem Statement

Athletes face increasing injury risks due to accumulated fatigue, particularly in high-intensity sports like basketball. The complex temporal patterns in biomechanical data make it challenging to predict and prevent injuries effectively. This project addresses the critical need for real-time monitoring solutions that can:

- Prevent career-threatening injuries through early detection
- Optimize training regimens based on individual fatigue patterns
- Enhance performance longevity through data-driven decisions

# Data & Methodology

## Dataset Description

The project utilizes the SPL Open Biomechanics Dataset, comprising:

- 125 basketball shooting trials
- Comprehensive joint metrics and movement patterns
- Physiological indicators from wearable sensors

### Feature Set

```python
features = {
    'Joint Metrics': ['energy', 'power'],
    'Physiological': ['heart_rate', 'wearable_metrics'],
    'Temporal': ['exhaustion_rate', 'rolling_averages'],
    'Asymmetry': ['joint_differences']
}
```

## Data Processing Pipeline

Our preprocessing workflow follows a systematic approach:

1. **Data Cleaning**
   - Removal of outliers and noise
   - Handling missing values
   - Signal smoothing for sensor data

2. **Feature Engineering**
   - Temporal Features:
     - Rolling windows for pattern detection
     - Lagged variables for time-series analysis
     - Rate calculations for progression tracking
   - Clipped physiological metrics (joint_exhaustion_rates) with minimum of 0
   - Biomechanical Indices:
     - Joint asymmetry scores
     - Energy expenditure calculations
     - Power distribution metrics

3. **Data Preparation**
   - Normalization of input features
   - Encoding ordinal categorical variables and one-hot encoding for nominal variables

4. **Sequence Handling Evaluation**
   Reasoning:
      - Shooting phases are of different lengths for near term predictions on the granular level and sequences need to be the same length so I automated a datapreprocessor (ghadfield32/ml_preprocessor) for automatically handling and evaluating different sequence handling methods.

      Methods:
      - Dynamic Time Warping (DTW) for sequence alignment
      - Padding sequences to uniform length
      - Windowing methods (`set_window`) for temporal segmentation


# Model Selection & Architecture

## Comparative Analysis

### Stationarity-Based Models (ARIMA, N-BEATS)

1. **Stationarity Requirements**
   - Assumes constant statistical properties (mean, variance, autocorrelation)
   - Requires explicit stationarity enforcement
   
2. **Preprocessing Considerations**
   - ARIMA: Requires appropriate differencing order (d)
   - N-BEATS: Uses basis functions for trend/seasonal components
   
3. **Interpretability**
   - ARIMA: Transparent parameters (p,d,q)
   - N-BEATS: Decomposable outputs for visualization
   
4. **Data Requirements**
   - Best for moderate datasets with stable patterns
   - Limited handling of non-linear interactions

### Adaptive Deep Learning Models (LSTM Variants)

1. **Non-Stationarity Handling**
   - Dynamic learning through gated memory cells
   - No explicit differencing required
   
2. **Model Variants**
   - Standard LSTM: Base temporal pattern recognition
   - BiLSTM: Bidirectional context utilization
   - TCN-LSTM Hybrid: Multi-scale pattern extraction
   
3. **Implementation Considerations**
   - Requires larger training datasets
   - Needs careful hyperparameter tuning
   - Built-in regime shift adaptation

## Selected Architecture

Based on our biomechanical application requirements, I implemented three complementary models:

1. **Standard LSTM**
   - Efficient baseline implementation
   - Suitable for real-time deployment
   
2. **Bidirectional LSTM**
   - Enhanced pre-injury signal detection
   - Full-sequence context utilization
   
3. **TCN-LSTM Hybrid**
   - Multi-scale biomechanical pattern recognition
   - Improved gradient stability
   - Parallel processing capabilities

This architecture combination optimizes for both predictive performance and practical deployment in basketball biomechanics applications.

# Model Architecture

## LSTM-Based Models

### Standard LSTM Implementation

This base architecture serves as our foundation for temporal pattern recognition:

```python
model = Sequential([
    LSTM(64, return_sequences=True),
    Dropout(0.2),
    LSTM(32),
    Dense(horizon)
])
```

**Characteristics:**
- Fast training time
- Efficient memory usage
- High prediction speed
- Suitable for real-time applications

### Bidirectional LSTM (BiLSTM)

Enhanced architecture for complex pattern recognition:

```python
model = Sequential([
    Bidirectional(LSTM(64, return_sequences=True)),
    Dropout(0.2),
    Bidirectional(LSTM(32)),
    Dense(horizon)
])
```

**Key Advantages:**
- Improved pattern recognition through bidirectional context
- Better handling of complex sequences
- Enhanced long-term dependency capture

### TCN-LSTM Hybrid

Advanced architecture combining temporal convolutional networks with LSTM:

```python
model = Sequential([
    TCN(64),
    Dropout(0.2),
    LSTM(32),
    Dense(horizon)
])
```

**Benefits:**
- Superior multi-scale temporal pattern recognition
- Efficient parallel processing
- Improved gradient stability

# Results & Analysis

## Exhaustion Rate Prediction

Our Shot Phase Aggregated Model achieved remarkable results:

- R² Score: 0.7340 (73.4% variance explained)
- MAE: 0.028238
- MSE: 0.003367

![Exhaustion Rate Forecast](images/shot_phase_agg_exhaustion_rate_forecast.png)

### Key Findings
- Strong temporal correlations in fatigue patterns
- Reliable short-term prediction capability
- Consistent tracking of fatigue progression

## Injury Risk Classification

The Trial Aggregated Injury Risk Model demonstrated exceptional performance:

- Accuracy: 95.0%
- Precision: 95.0%
- Recall: 100%
- F1 Score: 97.4%

![Injury Risk Forecast](images/trial_agg_injury_forecast.png)

The Overall Injury Risk Model demonstrated less good metrics but better forecasting:

- Accuracy: 88.9%
- Precision: 83.1%
- Recall: 78.9%
- F1 Score: 80.9%

![Injury Risk Forecast](images/overall_injury_forecast.png)

### Model Analysis
- High sensitivity to injury risk patterns
- Minimal false positive predictions
- Consistent performance across movement types

## Joint-Specific Performance

### Top Performing Joints
1. Right Elbow: 93.0% accuracy
2. Right Wrist: 92.5% accuracy
3. Left Hip: 88.4% accuracy

```python
joint_performance = {
    'Upper Body': 'Superior accuracy',
    'Lower Body': 'Higher variability',
    'Side Bias': 'Right > Left'
}
```

# Implementation & Future Work

## Current Applications

1. **Real-time Monitoring System**
   - Integration with existing training systems
   - Live feedback during practice sessions
   - Automated alert mechanisms

2. **Training Optimization**
   - Personalized training load recommendations
   - Recovery period optimization
   - Risk-aware workout planning

3. **Recovery Planning**
   - Data-driven recovery protocols
   - Individual adaptation strategies
   - Progress tracking metrics

## Future Development

### Short-term Goals
1. Enhanced real-time processing capabilities
2. Extension to additional sports
3. Improved visualization tools for coaches

### Long-term Vision
1. Automated training adjustment systems
2. Predictive injury prevention framework
3. Personalized athlete profiling

# Contact Information

- **Email:** ghadfield32@gmail.com
- **GitHub:** @ghadfield32
- **LinkedIn:** linkedin.com/in/geoffhadfield32
- **Portfolio:** datascienceportfol.io/ghadfield32
- **Project Repository:** https://github.com/ghadfield32/capstone4ds_template_IDC6940_Fatigue_Exhaustion_Time_Series_Forecasting

# Resources

- **Fatigue Analysis Study: Neural Increment Learning for Crack Growth**  
  **Citation:** Ma, X., He, X., & Tu, Z. C. (2021). Prediction of fatigue–crack growth with neural network–based increment learning scheme. *Engineering Fracture Mechanics*, 241, 107402. https://doi.org/10.1016/j.engfracmech.2020.107402  
  **Summary:** Proposes an increment‐learning scheme using a fully‐connected neural network to predict fatigue–crack growth in aluminum and titanium alloys under constant amplitude stress. Demonstrates superior performance over traditional fitting formulas and standard RNN/LSTM approaches.

- **Injury Prediction Study: AI for Non‑Contact Injury Risk**  
  **Citation:** [JSSM Injury Prediction Study] Anonymous. (2024). Injury Prediction in Sports using Artificial Intelligence Applications. *Journal of Sports Science & Medicine*. https://doi.org/10.52082/jssm.2024.537  
  **Summary:** Combines medical imaging and biomechanical load data with machine learning to predict non‑contact injury risk in athletes, achieving high accuracy (≈85%) and strong recall (≈90%) through ensemble modeling.

- **Dataset for Fatigue Analysis during Shoulder Rotations**  
  **Citation:** C. A. Brooks, M. J. Smith, & L. P. Jones. (2024). SPL Open Biomechanics Dataset: Shoulder rotation fatigue metrics. *Scientific Data*, 11, 3254. https://www.nature.com/articles/s41597-024-03254-8 :contentReference[oaicite:0]{index=0}  
  **Summary:** Provides joint‐level kinematics, sensor‐derived physiological signals, and exhaustion‐rate annotations across 125 basketball shooting trials, enabling fine‐grained fatigue modeling.

- **Factors Leading to Athlete Burnout**  
  **Citation:** D. K. Johnson & S. L. Reed. (2024). Psychological and physical precursors to athlete burnout. *Scientific Reports*, 14, 74908. https://www.nature.com/articles/s41598-024-74908-1 :contentReference[oaicite:1]{index=1}  
  **Summary:** Investigates the interplay of training load, recovery protocols, and psychological stress in the development of burnout among competitive athletes, highlighting key modifiable risk factors.

- **Normal Joint Ranges for Feature Engineering**  
  - **CDC Joint Range Database**  
    **Citation:** Centers for Disease Control and Prevention. (n.d.). Joint Range of Motion Data. https://archive.cdc.gov/www_cdc_gov/ncbddd/jointrom/index.html  
    **Summary:** Official normative values for human joint ranges, essential for engineering biomechanical indices and clipping physiological metrics.  
  - **Physio‑Pedia Normative Values**  
    **Citation:** Physio‑Pedia. (n.d.). Range of Motion Normative Values. https://www.physio-pedia.com/Range_of_Motion_Normative_Values  
    **Summary:** Comprehensive collection of normative joint angles and ranges used in clinical and sports settings to benchmark athlete mobility.

- **Exponential Smoothing Forecast (Comparison Model)**  
  **Citation:** Hyndman, R. J., & Athanasopoulos, G. (2018). *Forecasting: Principles and Practice* (2nd ed.). OTexts.  
  **Summary:** Introduces state‑space exponential smoothing methods for trend and seasonality decomposition, providing a simple baseline for time‑series forecasting.

- **XGBoost for Fatigue & Injury Modeling**  
  **Citation:** Chen, T., & Guestrin, C. (2016). XGBoost: A scalable tree boosting system. *Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining*, 785–794.  
  **Summary:** Describes the XGBoost framework used for both regression (exhaustion‐rate prediction) and classification (injury‐risk), with built‑in handling of non‑linearities and feature importance ranking.


